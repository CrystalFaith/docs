$title@: AMP とは

components:
  - youtube

hero:
  title@: 誰もがコンテンツを利用しやすい環境を作るためのオープンソースの取り組み
  triangle_img: herobg.svg
  line1_img: herolines1.svg
  line2_img: herolines2.svg
  phone_img_base: /static/img/about/overview/what_phone
  content: AMP は、読み込みがほぼ一瞬で完了しスムーズに表示される魅力的なウェブページを簡単に作成できるオープンソース ライブラリです。AMP ページは、作成者がリンク先として指定して管理できるウェブページです。<p>AMP では、既存のスキルセットとフレームワークを活用してウェブページを作成できます。AMP は<a href="/ja/support/faqs/supported-platforms.html">多種多様なプラットフォーム</a>でサポートされており、各種<a href="/ja/support/faqs/supported-browsers.html">ブラウザ</a>と互換性があります。</p><p>AMP のエコシステムには、2,500 万のドメイン、100 社以上のテクノロジー プロバイダ、大手プラットフォームが含まれ、その範囲は出版、広告、e コマース、地域企業、小規模ビジネスなど多岐にわたります。</p>

core:
  title: "AMP ページを構成する 3 つのコア コンポーネント"
  components:
    - title: AMP HTML
      subtitle: |
        **AMP HTML** は、安定したパフォーマンスのために制限がいくつか課された HTML です。
      description: |
        AMP HTML は基本的に、カスタム AMP プロパティが付いた HTML の拡張版です。
        簡単な AMP HTML ファイルは次のようになります。
      example: /content/includes/html-example.md
      description2: |
        AMP HTML ページのほとんどのタグは通常の HTML タグですが、
        一部の HTML タグは AMP 固有のタグに置き換えられます（
        [AMP 仕様の HTML タグ](/ja/docs/fundamentals/spec.html)もご覧ください）。
        AMP HTML コンポーネントと呼ばれるこれらのカスタム要素には、
        一般的なパターンを効果的な方法で簡単に実装できます。
        <p>たとえば、[`amp-img`](/ja/docs/reference/components/amp-img.html) タグを使用すると、
        `srcset` にまだ対応していないブラウザでもこの属性を完全にサポートできます。
        詳しくは、[初めての AMP HTML ページを作成する](/ja/docs/getting_started/create.html)方法をご覧ください。
        <p>検索エンジンやその他のプラットフォームでは、AMP ページは
        `<link rel="">` HTML タグによって検出されます。非 AMP バージョンと AMP バージョンの
        ページを配置することも、AMP バージョンのみを配置することもできます。詳しくは、
        [ページを検出可能にする](/ja/docs/fundamentals/discovery.html)をご覧ください。
    - title: AMP JS
      subtitle: |
          **AMP JS** ライブラリは、AMP HTML ページの高速なレンダリングを確実に実行します。
      description: |
        [AMP JS ライブラリ](https://github.com/ampproject/amphtml/tree/master/src)には、
        [AMP のパフォーマンスに関するおすすめの設定](/ja/learn/about-how/)がすべて実装されており、
        リソースの読み込みを管理し、前述のカスタムタグを提供し、
        ページの高速なレンダリングを実現します。
        <p>最適化の効果が最も高いのは、外部リソースから取り込まれるすべての要素を非同期にするという機能です。この機能を利用すれば、ページ内のいずれかの要素によってレンダリングが妨げられることはありません。
        <p>パフォーマンスを向上させるためのその他の技術には、すべての iframe のサンドボックス化、リソース読み込み前に行うページ上の各要素のレイアウト事前計算、低速な CSS セレクタの無効化などがあります。
        <p>[最適化](/ja/learn/about-how/)だけではなく、制限事項についての詳細を確認するには、[AMP HTML の仕様](/ja/docs/fundamentals/spec.html)をご覧ください。
    - title: AMP Cache
      subtitle: |
          キャッシュされた AMP HTML ページを提供する場合は、**Google AMP Cache** を使用できます。
      description: |
          [Google AMP Cache](https://developers.google.com/amp/cache/) はプロキシベースのコンテンツ配信ネットワークで、
          すべての有効な AMP ドキュメントを配信します。
          AMP HTML ページをフェッチしてキャッシュし、ページのパフォーマンスを自動的に向上させます。
          Google AMP Cache を使用すると、ドキュメント、すべての JS ファイル、すべてのイメージは、
          効率を最大化するために、
          [HTTP 2.0](https://http2.github.io/) を使用する同じオリジナルから読み込まれます。
          <p>キャッシュには
          [検証システム](https://github.com/ampproject/amphtml/tree/master/validator)
          が組み込まれており、ページが動作することの保証と、
          外部リソースに依存していないことの確認を行っています。
          検証システムでは、ページのマークアップが
          AMP HTML の仕様を満たしていることを確認する一連のアサーションが実行されます。
          <p>各 AMP ページには、別バージョンの検証ツールがバンドルされています。このバージョンは、ページのレンダリング時に検証エラーをブラウザのコンソールに直接記録することができるため、
          コードの複雑な変更によってパフォーマンスや
          ユーザー エクスペリエンスにどのような影響があるかを確認できます。
          <p>詳細は [AMP HTML ページのテスト](/ja/docs/fundamentals/validate.html)をご確認ください。

video:
  description: "詳しくはこちらの紹介ビデオをご覧ください"
  id: 5Yjoe54vzwE
  line1_img: lines3.svg
  line2_img: line4.svg

resources:
  title: AMP のデザイン原則
  link_url: /content/learn/about/amp-design-principles.yaml
  link_text: デザイン原則の詳細を見る

cta:
  title: AMP の活用例
  link_text: 各社の事例紹介を見る
  link_url: /content/learn/case-studies.html
 
